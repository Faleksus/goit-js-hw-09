{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,uBACnCE,EAAWH,SAASC,cAAc,sBAClCG,EAAaJ,SAASC,cAAc,wBAoB1C,SAASI,EAAcC,EAAUC,GACf,IAAIC,SAAQ,CAACC,EAASC,KAEpCC,YAAW,KACaC,KAAKC,SAAW,GAIpCJ,EAAQ,C,SAAEH,E,MAAUC,IAIpBG,EAAO,C,SAAEJ,E,MAAUC,GAAM,GAE1BA,EAAA,IAGFO,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACjBQ,EAAAlB,GAASmB,OAAOC,QAAQ,qBAAqBX,QAAeC,MAAS,IAEtEW,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBQ,EAAAlB,GAASmB,OAAOG,QAAQ,oBAAoBb,QAAeC,MAAS,GAE1E,CAzCAR,EAAKqB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,EAAaC,OAAO,GAAGtB,EAAUuB,SACjCC,EAAYF,OAAO,GAAGrB,EAASsB,SAC/BE,EAAeH,OAAO,GAAGpB,EAAWqB,SAE1C,IAAIG,EAAeL,EACnB,IAAK,IAAIM,EAAI,EAAGA,EAAIF,EAAcE,IACX,IAAjBD,IACFA,GAAgBF,GAElBrB,EAAcwB,EAAI,EAAGD,EAEzB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayElem = document.querySelector('input[name=\"delay\"]');\nconst stepElem = document.querySelector('input[name=\"step\"]');\nconst amountElem = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const firstDelay = Number(`${delayElem.value}`);\n  const stepDelay = Number(`${stepElem.value}`);\n  const promiseCount = Number(`${amountElem.value}`);\n\n  let currentDelay = firstDelay;\n  for (let i = 0; i < promiseCount; i++ ) {\n    if (currentDelay !== 0) {\n      currentDelay += stepDelay;\n    }\n    createPromise(i + 1, currentDelay);\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      \n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      }\n      else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayElem","$47d4ff9957288465$var$stepElem","$47d4ff9957288465$var$amountElem","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","then","$parcel$interopDefault","Notify","success","catch","failure","addEventListener","event","preventDefault","firstDelay","Number","value","stepDelay","promiseCount","currentDelay","i"],"version":3,"file":"03-promises.ed0518eb.js.map"}